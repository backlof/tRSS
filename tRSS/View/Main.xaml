<?xml version="1.0" encoding="utf-8"?>
<Window
	x:Class="tRSS.Main" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
	xmlns:util="clr-namespace:tRSS.Utilities"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	Title="tRSS"
	Closing="Window_Closing"
	MinHeight="555"
	MinWidth="550"
	Height="{Binding Path=View.Height, Mode=TwoWay}"
	Width="{Binding Path=View.Width, Mode=TwoWay}"
	Top="{Binding Path=View.Top, Mode=TwoWay}"
	Left="{Binding Path=View.Left, Mode=TwoWay}"
	WindowState="{Binding Path=View.State, Mode=TwoWay}">
	
	<Window.Resources>
		<Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemDragDrop">
			<Setter Property="AllowDrop" Value="True" />
			<EventSetter Event="PreviewMouseMove" Handler="ListBoxItem_PreviewMouseMoveEvent" />
			<EventSetter Event="Drop" Handler="ListBoxItem_Drop" />
		</Style>
		
		<Style TargetType="ListBox">
			<Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemDragDrop}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="BorderBrush" Value="LightGray" />
			<Setter Property="SelectionMode" Value="Single" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		</Style>
		
		<Style TargetType="DataGrid">
			<Setter Property="CanUserAddRows" Value="False" />
			<Setter Property="CanUserReorderColumns" Value="False" />
			<Setter Property="IsReadOnly" Value="True" />
			<Setter Property="AutoGenerateColumns" Value="False"/>
		</Style>
		
		<Style TargetType="GridSplitter">
			<Setter Property="Width" Value="2" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
		</Style>
		
		<sys:Double x:Key="MinColumnWidth">50</sys:Double>
	</Window.Resources>
	
	<DockPanel>
		<StatusBar DockPanel.Dock="Bottom">
			<StatusBar.Resources>
				<Style TargetType="{x:Type StatusBarItem}">
					<Setter Property="Margin" Value="6,0,6,0"/>
				</Style>
			</StatusBar.Resources>
			<StatusBarItem>
				<WrapPanel>
					<TextBlock Text="Last update " />
					<TextBlock Text="{Binding Path=Data.LastUpdate, Converter={StaticResource DateConverter}, ConverterParameter=T}" />
				</WrapPanel>
			</StatusBarItem>
			<Separator />
			<StatusBarItem>
				<WrapPanel>
					<TextBlock Text="Next update " />
					<TextBlock Text="{Binding Path=Data.NextUpdate, Converter={StaticResource DateConverter}, ConverterParameter=T}" />
				</WrapPanel>
			</StatusBarItem>
		</StatusBar>
		
		<ToolBarTray DockPanel.Dock="Top" >
			<ToolBar>
				<Button Command="{Binding Path=SaveCommand}">
					<WrapPanel>
						<Image Source="/Resources/FamFamFamSilk/Disk.png" UseLayoutRounding="True" />
						<TextBlock Style="{StaticResource ImageButtonTextBlock}" Text="Save" />
					</WrapPanel>
				</Button>
			</ToolBar>
			
			<ToolBar ToolTip="Find the folder you want your torrent files to go.">
				<Button Command="{Binding Path=Data.ChooseDirectory}">
					<WrapPanel>
						<Image Source="/Resources/FamFamFamSilk/Folder.png" UseLayoutRounding="True" />
						<TextBlock Style="{StaticResource ImageButtonTextBlock}" Text="Browse" />
					</WrapPanel>
				</Button>
				<TextBox Margin="5,0,0,0" Width="150" Text="{Binding Path=Data.TorrentDropDirectory}" IsEnabled="False" />
			</ToolBar>
			
			<ToolBar>
				<Label Content="Refresh every" />
				<ComboBox Width="80" ItemsSource="{Binding Path=Data.UpdateOptions}" SelectedIndex="{Binding Path=Data.SelectedUpdateOption, Mode=TwoWay}" SelectionChanged="ComboBox_SelectionChanged" />
			</ToolBar>
			
			<ToolBar>
				<Button Command="{Binding Path=Data.Refresh}">
					<WrapPanel>
						<Image Source="/Resources/FamFamFamSilk/Table_Refresh.png" UseLayoutRounding="True" />
						<TextBlock Style="{StaticResource ImageButtonTextBlock}" Text="Refresh" />
					</WrapPanel>
				</Button>
			</ToolBar>
		</ToolBarTray>
		
		
		<TabControl>
			
			
			
			
			
			
			<TabItem Header="Filters">
				
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="{StaticResource MinColumnWidth}" Width="{Binding Path=View.FilterSplitterPosition, Converter={StaticResource GridLengthConverter}, Mode=TwoWay}" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					
					
					
					<ListBox Grid.Column="0" SelectedIndex="{Binding Path=Data.SelectedFilterIndex, Mode=TwoWay}" SelectedItem="{Binding Path=Data.SelectedFilter, Mode=TwoWay}" ItemsSource="{Binding Path=Data.Filters}" >
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path=Title}" TextTrimming="WordEllipsis" Margin="4,0,0,0" />
							</DataTemplate>
						</ListBox.ItemTemplate>
						<ListBox.ContextMenu>
							<ContextMenu>
								<MenuItem Header="New" Command="{Binding Path=Data.NewFilter}" >
									<MenuItem.Icon>
										<Image Source="/Resources/FamFamFamSilk/Layout_Add.png" UseLayoutRounding="True" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Delete" Command="{Binding Path=Data.DeleteFilter}" >
									<MenuItem.Icon>
										<Image Source="/Resources/FamFamFamSilk/Layout_Delete.png" UseLayoutRounding="True" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</ListBox.ContextMenu>
						<ListBox.InputBindings>
							<KeyBinding Key="Delete" Command="{Binding Path=Data.DeleteFilter}" />
						</ListBox.InputBindings>
					</ListBox>
					
					
					<GridSplitter Grid.Column="1" />
					
					
					
					
					
					
					<GroupBox Grid.Column="2" Margin="4">
						<GroupBox.Header>
							<CheckBox Content="Active" IsChecked="{Binding Path=Data.SelectedFilter.IsActive, Mode=TwoWay}" />
						</GroupBox.Header>
						
						
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							
							<Label Grid.Row="0" Grid.Column="0" Content="Name" Style="{StaticResource FormLabel}" />
							<TextBox Grid.Row="1" Grid.Column="0" Text="{Binding Path=Data.SelectedFilter.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
							
							<Label Grid.Row="2" Grid.Column="0" Content="Filter" Style="{StaticResource FormLabel}" />
							<TextBox Grid.Row="3" Grid.Column="0" Text="{Binding Path=Data.SelectedFilter.TitleFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
							<Label Grid.Row="4" Grid.Column="0" Content="Regex" Style="{StaticResource FormLabel}" />
							<TextBox Grid.Row="5" Grid.Column="0" Text="{Binding Path=Data.SelectedFilter.RegexPattern}" IsEnabled="False" />
							
							<Label Grid.Row="6" Grid.Column="0" Content="Feed" Style="{StaticResource FormLabel}" />
							<ComboBox Grid.Row="7" Grid.Column="0" ItemsSource="{Binding Path=Data.Feeds}" SelectedIndex="{Binding Path=Data.SelectedFilter.SearchInFeedIndex, Mode=TwoWay}" >
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Title}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>
							
							
							<GroupBox Header="Options" Grid.Column="1" Grid.Row="0" Grid.RowSpan="8" VerticalAlignment="Center" Margin="8,0,0,0">
								<StackPanel>
									<CheckBox Margin="0,0,0,8" Content="Match once" IsChecked="{Binding Path=Data.SelectedFilter.MatchOnce, Mode=TwoWay}" />
									<CheckBox Content="Ignore caps" IsChecked="{Binding Path=Data.SelectedFilter.IgnoreCaps, Mode=TwoWay}" />
									<Button Content="Filter" Padding="2" Margin="0,8,0,0" Command="{Binding Path=Data.FilterSelected}" />
									<Button Content="Reset" Padding="2" Margin="0,8,0,0" Command="{Binding Path=Data.ResetFilter}" />
								</StackPanel>
							</GroupBox>
							
							
							<Label Grid.Row="8" Grid.ColumnSpan="2" Content="Include" Style="{StaticResource FormLabel}" />
							<TextBox Grid.Row="9" Grid.ColumnSpan="2" Text="{Binding Path=Data.SelectedFilter.Include, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
							<Label Grid.Row="10" Grid.ColumnSpan="2" Content="Exclude" Style="{StaticResource FormLabel}" />
							<TextBox Grid.Row="11" Grid.ColumnSpan="2" Text="{Binding Path=Data.SelectedFilter.Exclude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="55" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" />
							
							<GroupBox Padding="8" Grid.Row="12" Grid.ColumnSpan="2" HorizontalAlignment="Left">
								<GroupBox.Header>
									<CheckBox IsChecked="{Binding Path=Data.SelectedFilter.IsTV, Mode=TwoWay}" Content="TV Show" Margin="0,12,0,0" />
								</GroupBox.Header>
								<StackPanel IsEnabled="{Binding Path=Data.SelectedFilter.IsTV}" Orientation="Horizontal">
									<Label Content="Season" />
									<wpfTool:IntegerUpDown Value="{Binding Path=Data.SelectedFilter.Season, Mode=TwoWay}" Minimum="1" />
									<Label Content="Episode" />
									<wpfTool:IntegerUpDown Value="{Binding Path=Data.SelectedFilter.Episode, Mode=TwoWay}" Minimum="1" />
								</StackPanel>
							</GroupBox>
						</Grid>
					</GroupBox>
				</Grid>
			
			</TabItem>
			
			
			
			
			
			
			<TabItem Header="Feeds">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="{StaticResource MinColumnWidth}" Width="{Binding Path=View.FeedSplitterPosition, Converter={StaticResource GridLengthConverter}, Mode=TwoWay}" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					
					
					<ListBox Grid.Column="0" SelectedIndex="{Binding Path=Data.SelectedFeedIndex, Mode=TwoWay}" SelectedItem="{Binding Path=Data.SelectedFeed, Mode=TwoWay}" ItemsSource="{Binding Path=Data.Feeds}" ItemContainerStyle="{StaticResource ListBoxItemDragDrop}" >
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path=Title}" />
							</DataTemplate>
						</ListBox.ItemTemplate>
						<ListBox.ContextMenu>
							<ContextMenu>
								<MenuItem Header="New" Command="{Binding Path=Data.NewFeed}" >
									<MenuItem.Icon>
										<Image Source="/Resources/FamFamFamSilk/Feed_Add.png" UseLayoutRounding="True" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Edit" Command="{Binding Path=Data.EditFeed}" >
									<MenuItem.Icon>
										<Image Source="/Resources/FamFamFamSilk/Feed_Edit.png" UseLayoutRounding="True" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Delete" Command="{Binding Path=Data.DeleteFeed}" >
									<MenuItem.Icon>
										<Image Source="/Resources/FamFamFamSilk/Feed_Delete.png" UseLayoutRounding="True" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</ListBox.ContextMenu>
						<ListBox.InputBindings>
							<KeyBinding Key="Delete" Command="{Binding Path=Data.DeleteFeed}" />
						</ListBox.InputBindings>
					</ListBox>
					
					
					
					<GridSplitter Grid.Column="1" />
					
					
					
					
					<TextBox x:Name="FeedReference" Visibility="Collapsed"
					         MinWidth="{Binding Path=View.FeedWidthTitle, Mode=TwoWay}"
					         Width="{Binding Path=View.FeedWidthPublished, Mode=TwoWay}"/>
					
					
					
					<GroupBox Grid.Column="2" Header="{Binding Path=Data.SelectedFeed.Title}" Margin="4">
						<DataGrid Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=Data.SelectedFeed.Items}">
							<DataGrid.Resources>
								
								<TextBlock x:Key="Published" MinWidth="{Binding Path=View.FeedWidthPublished, Mode=TwoWay}"/>
							</DataGrid.Resources>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Title" Binding="{Binding Path=Title}"
									Width="{Binding MinWidth, Source={x:Reference FeedReference}, Converter={StaticResource DataGridWidthConverter}, Mode=TwoWay}" />
								<DataGridTextColumn Header="Published"
									Binding="{Binding Path=Published, Converter={StaticResource DateConverter}, ConverterParameter=g}"
									Width="{Binding Width, Source={x:Reference FeedReference}, Converter={StaticResource DataGridWidthConverter}, Mode=TwoWay}" />
							</DataGrid.Columns>
						</DataGrid>
					</GroupBox>
				
				
				
				</Grid>
			
			
			
			</TabItem>
			
			
			
			
			
			
			
			
			
			
			
			
			
			<TabItem Header="Downloaded">
				<Grid>
					<TextBox x:Name="FilterReference" Visibility="Collapsed"
					         MaxWidth="{Binding Path=View.FilterWidthTitle, Mode=TwoWay}"
					         MinWidth="{Binding Path=View.FilterWidthPublished, Mode=TwoWay}"
					         Width="{Binding Path=View.FilterWidthDownloaded, Mode=TwoWay}"/>
					
					<DataGrid Margin="10" ItemsSource="{Binding Path=Data.DownloadedItems}" SelectedItem="{Binding Path=Data.SelectedDownload}" >
						<DataGrid.ContextMenu>
							<ContextMenu >
								<MenuItem Header="Remove" Command="{Binding Path=Data.RemoveDownload}" />
							</ContextMenu>
						</DataGrid.ContextMenu>
						<DataGrid.Columns>
							<DataGridTextColumn Header="Title" Binding="{Binding Path=Title}"
								Width="{Binding MaxWidth, Source={x:Reference FilterReference}, Converter={StaticResource DataGridWidthConverter}, Mode=TwoWay}" />
							<DataGridTextColumn Header="Published" Binding="{Binding Path=Published, Converter={StaticResource DateConverter}, ConverterParameter=g}"
								Width="{Binding MinWidth, Source={x:Reference FilterReference}, Converter={StaticResource DataGridWidthConverter}, Mode=TwoWay}" />
							<DataGridTextColumn Header="Downloaded" Binding="{Binding Path=Downloaded, Converter={StaticResource DateConverter}, ConverterParameter=g}"
								Width="{Binding Width, Source={x:Reference FilterReference}, Converter={StaticResource DataGridWidthConverter}, Mode=TwoWay}" />
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			
			
			</TabItem>
		</TabControl>
	
	
	</DockPanel>

</Window>